#include <iostream>
#define MAX 100 // Ukuran maksimum stack

using namespace std;

class Stack {
private:
    int top;
    int arr[MAX];

public:
    Stack() {
        top = -1; // Inisialisasi stack kosong
    }

    bool isFull() {
        return (top >= MAX - 1); // Memeriksa apakah stack penuh
    }

    bool isEmpty() {
        return (top < 0); // Memeriksa apakah stack kosong
    }

    void push(int x) {
        if (isFull()) {
            cout << "Stack overflow (stack penuh)" << endl;
            return;
        }
        arr[++top] = x;
        cout << x << " ditambahkan ke stack" << endl;
    }

    int pop() {
        if (isEmpty()) {
            cout << "Stack underflow (stack kosong)" << endl;
            return -1;
        }
        return arr[top--];
    }

    int peek() {
        if (isEmpty()) {
            cout << "Stack kosong" << endl;
            return -1;
        }
        return arr[top];
    }

    void display() {
        if (isEmpty()) {
            cout << "Stack kosong" << endl;
            return;
        }
        cout << "Isi stack: ";
        for (int i = top; i >= 0; i--) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    Stack stack;

    stack.push(10);
    stack.push(20);
    stack.push(30);

    cout << "Elemen teratas adalah: " << stack.peek() << endl;
    cout << "Isi stack: ";
    stack.display();
	cout << stack.pop() << " dihapus dari stack" << endl;
    cout << "Isi stack setelah penghapusan: ";
    stack.display();

    return 0;
}
